# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    working_directory: ~/tmp
    docker:
      - image: cimg/openjdk:11.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      # Use mvn clean and package as the standard maven build phase###
      - run:
          name: Build
          command: mvn -B -DskipTests clean install
      - run: ls -al ~/
      - run: ls -al ~/tmp/
  deploy:
    machine: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - "82:18:75:92:9b:a7:d6:d5:82:b1:9c:32:2b:5a:be:e5"
      - run:
          name: Deploy Over SCP
          command: |
            scp ~/telegram-tap-bot-0.0.1-SNAPSHOT.jar ${SSH_USER}@${SSH_HOST}:${PROD_PATH}
#             ls
      - run:
          name: Deploy Over SSH
          command: |
            ssh ${SSH_USER}@${SSH_HOST} ${PROD_PATH}/launch.sh
#            ls /home/circleci/project/target

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build # only deploy once build job has completed
          filters:
            branches:
              only: master # only deploy on the main branch
